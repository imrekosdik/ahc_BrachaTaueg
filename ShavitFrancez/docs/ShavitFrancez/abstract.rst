.. include:: substitutions.rst
========
Abstract
========

A computation in a distributed algorithm terminates when the algorithm reaches a state where no potential applicable steps exist. In distributed systems, determining whether a particular computation has terminated is a crucial need because the execution of other computations may depend on the completion of the execution. Because the processes in a distributed system do not know the global state of the system and do not share any global clock, inferring if a distributed computation has ended is a challenging problem. The :ref:`Shavit-Francez Algorithm <ShavitFrancezTerminationDetectionAlgorithm>` is a fundamental termination detection algorithm that addresses these issues, ensuring that the system reaches a consistent state where all the processes complete their computations before proceeding with other tasks. Implementing the :ref:`Shavit-Francez Algorithm <ShavitFrancezTerminationDetectionAlgorithm>`, along with analyzing the message and time complexity by running the algorithm on different network topologies and various numbers of nodes, provides valuable insights on the algorithm's efficiency and applicability over real-world distributed systems. 